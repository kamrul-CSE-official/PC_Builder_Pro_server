datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  BUYER
  SELLER
  ADMIN
}

enum ProductTypes {
  MONITOR
  MOTHERBOARD
  RAM
  MOUSE
  KEYBOARD
  SSD
  PROCESSOR
  OTHERS @map("Types")
}

enum PaymentTypes {
  CARD
  CASH_ON_DELIVERY
  MOBILE_BANKING
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  email      String    @unique
  name       String
  profilePic String?   @default("https://avatar.iran.liara.run/public")
  password   String
  role       Role?     @default(BUYER)
  reviews    Review[]
  products   Product[] @relation("ProductSeller")
  sales      Sell[]    @relation("UserSales")
  createdAt  DateTime  @default(now())
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  model       String    @unique
  type        ProductTypes
  brand       String
  title       String
  description String
  price       Float
  stock       Int?
  image       String
  seller      User      @relation(fields: [sellerId], references: [id], name: "ProductSeller")
  sellerId    String    @db.ObjectId
  reviews     Review[]
  sales       Sell[]    @relation("ProductSales")
  createdAt   DateTime  @default(now())
}


model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int @default(0)
  content   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model Sell {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  buyer         User          @relation(fields: [buyerId], references: [id], name: "UserSales")
  buyerId       String        @db.ObjectId
  product       Product       @relation(fields: [productId], references: [id], name: "ProductSales")
  productId     String        @db.ObjectId
  quantity      Int
  paymentType   PaymentTypes
  paymentDetails String
  createdAt     DateTime      @default(now())
}
