datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  BUYER
  SELLER
  ADMIN
}

enum Types {
  MONITOR
  MOTHERBOARD
  RAM
  MOUSE
  KEYBOARD
  SSD
  PROCESSOR
  OTHERS
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  email      String    @unique
  name       String
  profilePic String?   @default("https://avatar.iran.liara.run/public")
  password   String
  role       Role?     @default(BUYER)
  reviews    Review[]
  comments   Comment[]
  products   Product[] @relation("ProductSeller")
  createdAt  DateTime  @default(now())
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  model       String    @unique
  type        Types
  brand       String
  title       String
  description String
  price       Float
  image       String
  seller      User      @relation(fields: [sellerId], references: [id], name: "ProductSeller")
  sellerId    String    @db.ObjectId
  reviews     Review[]
  comments    Comment[]
  createdAt   DateTime  @default(now())
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  rating    Int
  content   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
}
